name: Parse Channels, Split & Base64

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *" # 减少到每天一次

env:
  THRD_PARS: '128'
  PARS_DP: '1'
  USE_INV_TC: 'n'

jobs:
  run_python_and_push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"

    - name: Grab content and update backup
      run: |
        mkdir -p archives/latest_backup
        curl https://github.com/qjlxg/hy2/raw/main/configtg.txt -o archives/latest_backup/mixed
        [ -s archives/latest_backup/mixed ] || { echo "Error: Downloaded file is empty or invalid"; exit 1; }

    - name: Create timestamped directory and archive
      run: |
        TIMESTAMP_DIR="$(date +'%Y%m')/$(date +'%Y-%m-%d_%H-%M-%S')"
        mkdir -p "./archives/${TIMESTAMP_DIR}"
        mkdir -p "./archives/channels/${TIMESTAMP_DIR}"
        cp -f splitted/mixed "./archives/${TIMESTAMP_DIR}/" || { echo "Error: splitted/mixed not found"; exit 1; }
        cp -f telegramchannels.json "./archives/channels/${TIMESTAMP_DIR}/" || { echo "Error: telegramchannels.json not found"; exit 1; }
        cp -f configtg.txt "./archives/${TIMESTAMP_DIR}/" || { echo "Error: configtg.txt not found"; exit 1; }
        cp -f configtg.yaml "./archives/${TIMESTAMP_DIR}/" || { echo "Error: configtg.yaml not found"; exit 1; }

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        [ -f requirements.txt ] && pip install -r requirements.txt || echo "Warning: requirements.txt not found"

    - name: Run Parser
      run: python tg-parser.py

    - name: Split UTF-8 and update subscriptions
      run: python python/splitter.py

    - name: Convert files to Base64
      run: |
        for file in mixed socks ss trojan vless vmess tuic hysteria2 hy2; do
          content=$(cat "python/$file" | base64 | tr -d '\n')
          echo "$content" > "splitted/$file"
        done

    - name: Check for changes
      id: changes
      run: |
        git add .
        git diff --cached --quiet && echo 'No changes' || echo '::set-output name=changed::true'

    - name: Commit and push changes
      if: steps.changes.outputs.changed == 'true'
      run: |
        git commit -m "Update subscriptions and Base64 files"
        git push
