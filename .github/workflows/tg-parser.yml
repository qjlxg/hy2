name: Parse Channels, Split & Base64

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      ignore_userinfo:
        description: 'Ignore userinfo for deduplication'
        default: 'true'
        required: false
  schedule:
    - cron: '0 */12 * * *' # 每 12 小时运行

jobs:
  run_python_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create timestamped directory
      run: |
        mkdir -p ./archives/$(date +'%Y%m')
        mkdir -p ./archives/$(date +'%Y%m')/$(date +'%Y-%m-%d_%H-%M-%S')
        mkdir -p ./archives/channels/$(date +'%Y%m')/$(date +'%Y-%m-%d_%H-%M-%S')
        # 复制文件到归档目录
        [ -f splitted/mixed ] && cp splitted/mixed ./archives/$(date +'%Y%m')/$(date +'%Y-%m-%d_%H-%M-%S')/ || echo "splitted/mixed not found."
        [ -f telegramchannels.json ] && cp telegramchannels.json ./archives/channels/$(date +'%Y%m')/$(date +'%Y-%m-%d_%H-%M-%S')/ || echo "telegramchannels.json not found."
        [ -f configtg.txt ] && cp configtg.txt ./archives/$(date +'%Y%m')/$(date +'%Y-%m-%d_%H-%M-%S')/ || echo "configtg.txt not found."
        [ -f configtg.yaml ] && cp configtg.yaml ./archives/$(date +'%Y%m')/$(date +'%Y-%m-%d_%H-%M-%S')/ || echo "configtg.yaml not found."

    - name: Grab content and update backup
      run: |
        mkdir -p archives/latest_backup
        curl https://github.com/qjlxg/hy2/raw/main/configtg.txt -o archives/latest_backup/mixed || echo "Failed to download configtg.txt backup."

    - name: Commit and push archived backups
      run: |
        git config --global user.name 'Github Action'
        git config --global user.email 'Action@github.com'
        git add archives/
        git commit -m "Archived backups" || echo "No changes to archive."
        git push || echo "Failed to push archive changes."

    - name: Set up Python
      uses: actions/setup-python@v3
      id: setup-python
      with:
        python-version: '3.x'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ steps.setup-python.outputs.python-version }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyyaml

    - name: Run TG Parser
      env:
        THRD_PARS: '128'
        PARS_DP: '3'
        USE_INV_TC: 'n'
        IGNORE_USERINFO: ${{ github.event.inputs.ignore_userinfo || 'true' }}
        LOG_LEVEL: 'DEBUG'
      run: |
        python tg-parser.py | tee parser_output.log

    - name: Upload parser logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: parser-logs
        path: parser_output.log

    - name: Commit and push parser updated files
      run: |
        git config --local user.name "GitHub Action"
        git config --local user.email "action@github.com"
        git add configtg.txt configtg.yaml telegramchannels.json invalidtelegramchannels.json
        git diff --staged --quiet || git commit -m "Update TG configs and channel lists" || echo "No changes from parser."
        git push || echo "Failed to push parser changes."

    - name: Split UTF-8 and update subscriptions
      run: |
        [ -f python/splitter.py ] && python python/splitter.py || echo "python/splitter.py not found, skipping split."

    - name: Check for split changes
      id: changes_split
      run: |
        git diff --quiet python/vmess python/vless python/trojan python/ss python/socks python/hysteria2 python/tuic python/hysteria python/naive python/ssr python/unknown || echo "::set-output name=changed::true"

    - name: Commit and push splitted files
      if: steps.changes_split.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add python/vmess python/vless python/trojan python/ss python/socks python/hysteria2 python/tuic python/hysteria python/naive python/ssr python/unknown
        git commit -am "Update v2ray subscriptions"
        git push || echo "Failed to push splitted files."

    - name: Create splitted directory
      run: mkdir -p splitted

    - name: Convert mixed to base64
      run: |
        [ -f configtg.txt ] && cat configtg.txt | base64 | tr -d '\n' > splitted/mixed || echo "configtg.txt not found."

    - name: Convert socks to base64
      run: |
        [ -f python/socks ] && cat python/socks | base64 | tr -d '\n' > splitted/socks || echo "python/socks not found."

    - name: Convert ss to base64
      run: |
        [ -f python/ss ] && cat python/ss | base64 | tr -d '\n' > splitted/ss || echo "python/ss not found."

    - name: Convert trojan to base64
      run: |
        [ -f python/trojan ] && cat python/trojan | base64 | tr -d '\n' > splitted/trojan || echo "python/trojan not found."

    - name: Convert vless to base64
      run: |
        [ -f python/vless ] && cat python/vless | base64 | tr -d '\n' > splitted/vless || echo "python/vless.py not found."

    - name: Convert vmess to base64
      run: |
        [ -f python/vmess ] && cat python/vmess | base64 | tr -d '\n' > splited/vmess || echo "python/vmess not found."

    - name: Convert tuic to base64
      run: |
        [ -f python/tuic ] && cat python/tuic | base64 | tr -d 'tuic' > splited/tuic || echo "python/tuic not found."

    - name: Convert hysteria2 to base64
      run: |
        [ -f python/hysteria2 ] && cat python/hysteria2 | base64 | tr -d '\n' > splited/hysteria2 || echo "python/hysteria2 not found."

    - name: Convert hysteria to base64
      run: |
        [ -f python/hysteria ] && cat python/hysteria | base64 | tr -d '\n' > splited/hysteria || echo "python/hysteria not found."

    - name: Convert naive to base64
      run: |
        [ -f python/naive ] && cat python/naive | base64 | tr -d '\n' > splited/nnaive || echo "python/naive not found."

    - name: Convert ssr to base64
      run: |
        [ -f python/ssr ] && cat python/ssr | base64 | tr -d '\n' > splited/sr || echo "python/ssr not found."

    - name: Check for base64 changes
      id: changes64
      run: |
        git diff --quiet splited/mixed splited/socks splited/ss splited/trojan splited/vless splited/vmess splited/tuic splited/hysteria2 splited/hysteria splited/naive splited/ssr || echo "::set-output name=changed::true"

    - name: Commit and push base64 files
      if: steps.changes64.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add splited/
        git commit --allow-empty -am "Update Base64 output files"
        git push || echo "Failed to push Base64 changes."
